apiVersion: apps/v1
kind: Deployment
metadata:
  name: nuodb-operator
  namespace: "$NAMESPACE"
  labels:
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: nuodb-operator
  template:
    metadata:
      labels:
        name: nuodb-operator
    spec:
      serviceAccountName: $SERVICE_ACCOUNT
      containers:
        - name: nuodb-operator
          # Replace this with the built image name
          image: $NUODB_OPERATOR_IMAGE
          command:
          - nuodb-operator
          imagePullPolicy: Always
          env:
            - name: WATCH_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: OPERATOR_NAME
              value: "nuodb-operator"
      initContainers:
      - command:
        - sh
        - -c
        - ls; pwd; ls /; cp /usr/local/etc/nuodb-operator/crds/*crd.yaml /crds/
        image: $NUODB_OPERATOR_IMAGE
        imagePullPolicy: Always
        name: extract-crds
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /crds
          name: crds
      - command:
        - sh
        - -c
        - kubectl apply -f /crds/
        image: gcr.io/cloud-marketplace-tools/k8s/deployer_envsubst:0.7.5
        imagePullPolicy: IfNotPresent
        name: inject-crds
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /crds
          name: crds
      volumes:
      - emptyDir: {}
        name: crds